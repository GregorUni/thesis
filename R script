library("rjson")
library(jsonlite)
json_file <- "final-1534866433-250-macsec-aes(gcm)-e-160iperf.json"
json_data <- fromJSON(json_file)
js2 <- as.character(toJSON(json_data))
OutputDataSet <- data.frame(fromJSON(js2))
gg <- ggplot(OutputDataSet...
///// diagramm gesendete bytes mtu pro 

g1<-OutputDataSet[[2]][[1]][[1]][[1]][11] // um an liste von ptmu zu kommen g7 <- OutputDataSet2[[1]][[7]] // um indirekt an die zu kommen dann g7<-unique(g7)
g5 <- OutputDataSet[[3]][[2]][[4]] // um an summe aller tests der bytes zu kommen
mean(g5) -> durchschnitt der aller tests mean(g5[1:250]) durchschnitt von 1-250 tests
g5<-humanReadable(g5)
ggplot(OutputDataSet2, aes(x=g1, y=g5)) + geom_point()
ggplot(OutputDataSet2, aes(x=OutputDataSet2[[1]][[7]], y=OutputDataSet2[[3]][[2]][[4]])) + geom_point()

plot(X1, x, xlab="Paketlänge in Bytes",type="l", col="blue", ylab="Bandbreite",xaxt="n",yaxt="n")+ axis(side=1,at=seq(0,1540,256),tcl=0.4,lwd.ticks=1,mgp=c(0,0.5,0))+axis(side=2,at=seq(210000000,130000000000,7000000000),tcl=0.3,lwd.ticks=1,mgp=c(0,0.5,0))+ lines(X1,chachaBytes,col="red") +lines(X1,nomacsecBytes,col="green") +lines(X1,aegisBytes,col="orange") +lines(X1,morusBytes,col="black") 

g7<-unique(g7)  ///um an eine menge zu kommen 
g3<-humanReadable(g3)
ggplot(OutputDataSet, aes(x=g1, y=g2)) + geom_point()
ggplot(OutputDataSet, aes(x=g2, y=g1)) + geom_bar(stat = "identity") 

x<- seq(1,4,by=1)
ggplot(OutputDataSet, aes(x=x, y=g1)) + geom_bar(stat = "identity") 

library(gdata) for humanreadable
g2<-humanReadable(OutputDataSet[[2]][[1]][[1]][[1]][5] )
g3 <- mean(g[[1]][[3]][[2]][[4]])

for(i in OutputDataSet[[2]][[1]][[1]]){{g3 <- print(i)} // so werden alle listen durchiteriert

###############################
gcc -Wall -c norx.c
for(i in OutputDataSet[[3]])
{
	for(j in i[5]){
		print(j)
	}
}

for(i in OutputDataSet[[2]][[1]]){for(j in i[4]){g3<-j}} // um an 10 test von bytes aus einer liste zu kommen


cat hallo hallo2 > hallo3
////////////////////////////////////////////////////////////////////////
library("rjson")
library(jsonlite)
library(gdata) 


aes_file <- "aes-gcm-e.json"
aes_data <- fromJSON(aes_file)
aes <- as.character(toJSON(aes_data))
aesSet <- data.frame(fromJSON(aes))
aes1 <- aesSet[[3]][[2]][[4]] 
aesBytes <- vector(mode="integer", length=6)
aesBytes[1] <- mean(aes1[1:250])
aesBytes[2] <- mean(aes1[251:500])
aesBytes[3] <- mean(aes1[501:750])
aesBytes[4] <- mean(aes1[751:1000])
aesBytes[5] <- mean(aes1[1001:1250])
aesBytes[6] <- mean(aes1[1251:1500])
aesBytesHumanReadable <- humanReadable(aesBytes)
aesBytes<-aesBytes/1000000

chacha_file <- "chacha-poly-e.json"
chacha_data <- fromJSON(chacha_file)
chacha <- as.character(toJSON(chacha_data))
chachaSet <- data.frame(fromJSON(chacha))
chacha1 <- chachaSet[[3]][[2]][[4]] 
chachaBytes <- vector(mode="integer", length=6)
chachaBytes[1] <- mean(chacha1[1:250])
chachaBytes[2] <- mean(chacha1[251:500])
chachaBytes[3] <- mean(chacha1[501:750])
chachaBytes[4] <- mean(chacha1[751:1000])
chachaBytes[5] <- mean(chacha1[1001:1250])
chachaBytes[6] <- mean(chacha1[1251:1500])
chachaBytesHumanReadable <- humanReadable(chachaBytes)
chachaBytes<-chachaBytes/1000000

aegis_file <- "aegis128L-e.json"
aegis_data <- fromJSON(aegis_file)
aegis <- as.character(toJSON(aegis_data))
aegisSet <- data.frame(fromJSON(aegis))
aegis1 <- aegisSet[[3]][[2]][[4]] 
aegisBytes <- vector(mode="integer", length=6)
aegisBytes[1] <- mean(aegis1[1:100])
aegisBytes[2] <- mean(aegis1[101:200]) 
aegisBytes[3] <- mean(aegis1[201:300])
aegisBytes[4] <- mean(aegis1[301:400])
aegisBytes[5] <- mean(aegis1[401:500])
aegisBytes[6] <- mean(aegis1[501:600])
aegisBytesHumanReadable <- humanReadable(aegisBytes)
aegisBytesHumanReadable <- humanReadable(aegisBytes)
aegisBytes<-aegisBytes/1000000

morus_file <- "morus640-e.json"
morus_data <- fromJSON(morus_file)
morus <- as.character(toJSON(morus_data))
morusSet <- data.frame(fromJSON(morus))
morus1 <- morusSet[[3]][[2]][[4]] 
morusBytes <- vector(mode="integer", length=6)
morusBytes[1] <- mean(morus1[1:100])
morusBytes[2] <- mean(morus1[101:200]) 
morusBytes[3] <- mean(morus1[201:300])
morusBytes[4] <- mean(morus1[301:400])
morusBytes[5] <- mean(morus1[401:500])
morusBytes[6] <- mean(morus1[501:600])
morusBytesHumanReadable <- humanReadable(morusBytes)
morusBytes<-morusBytes/1000000

nomacsec_file <- "no-macsec.json"
nomacsec_data <- fromJSON(nomacsec_file)
nomacsec <- as.character(toJSON(nomacsec_data))
nomacsecSet <- data.frame(fromJSON(nomacsec))
nomacsec1 <- nomacsecSet[[3]][[2]][[4]] 
nomacsecBytes <- vector(mode="integer", length=6)
nomacsecBytes[1] <- mean(nomacsec1[1:100])
nomacsecBytes[2] <- mean(nomacsec1[101:200]) 
nomacsecBytes[3] <- mean(nomacsec1[201:300])
nomacsecBytes[4] <- mean(nomacsec1[301:400])
nomacsecBytes[5] <- mean(nomacsec1[401:500])
nomacsecBytes[6] <- mean(nomacsec1[501:600])
nomacsecBytesHumanReadable <- humanReadable(nomacsecBytes)
nomacsecBytes<-nomacsecBytes/1000000

x <- vector(mode="integer", length=6)

x[1] <- 128
x[2] <- 256
x[3] <- 512
x[4] <- 1024
x[5] <- 1400
x[6] <- 1540

options(scipen=999)

plot(x, aesBytes, xlab="Paketlänge in Bytes",type="l", col="blue", ylab="Bandbreite in Mbytes/s",xaxt="n",yaxt="n",ylim=c(0,1220),xlim=c(0,1540), yaxs = "i",xaxs = "i")+ axis(side=1,at=seq(0,1540,256),tcl=-0.4,lwd.ticks=1,mgp=c(0,0.5,0))+axis(side=2,at=seq(0,1200,200),tcl=-0.4,lwd.ticks=1,mgp=c(0,0.5,0))+ lines(x,chachaBytes,col="red") +lines(x,nomacsecBytes,col="green") +lines(x,aegisBytes,col="orange") +lines(x,morusBytes,col="black") +legend("bottomright", inset=0.05, legend =c("AES-GCM","Chacha20-Poly1305","MORUS640","AEGIS128L","no-macsec"),col=c("blue", "red","black","orange","green"), lty=1, cex=0.8,box.lty=0)

aeswe_file <- "aes-gcm-we.json"
aeswe_data <- fromJSON(aeswe_file)
aeswe <- as.character(toJSON(aeswe_data))
aesweSet <- data.frame(fromJSON(aeswe))
aeswe1 <- aesweSet[[3]][[2]][[4]] 
aesweBytes <- vector(mode="integer", length=6)
aesweBytes[1] <- mean(aeswe1[1:250])
aesweBytes[2] <- mean(aeswe1[251:500]) 
aesweBytes[3] <- mean(aeswe1[501:750])
aesweBytes[4] <- mean(aeswe1[751:1000])
aesweBytes[5] <- mean(aeswe1[1001:1250])
aesweBytes[6] <- mean(aeswe1[1251:1500])
aesweBytesHumanReadable <- humanReadable(aesweBytes)
aesweBytes<-aesweBytes/1000000

chachawe_file <- "chachapoly-we.json"
chachawe_data <- fromJSON(chachawe_file)
chachawe <- as.character(toJSON(chachawe_data))
chachaweSet <- data.frame(fromJSON(chachawe))
chachawe1 <- chachaweSet[[3]][[2]][[4]] 
chachaweBytes <- vector(mode="integer", length=6)
chachaweBytes[1] <- mean(chachawe1[1:250])
chachaweBytes[2] <- mean(chachawe1[251:500]) 
chachaweBytes[3] <- mean(chachawe1[501:750])
chachaweBytes[4] <- mean(chachawe1[751:1000])
chachaweBytes[5] <- mean(chachawe1[1001:1250])
chachaweBytes[6] <- mean(chachawe1[1251:1500])
chachaweBytesHumanReadable <- humanReadable(chachaweBytes)
chachaweBytes<-chachaweBytes/1000000

aegiswe_file <- "aegis128l-we.json"
aegiswe_data <- fromJSON(aegiswe_file)
aegiswe <- as.character(toJSON(aegiswe_data))
aegisweSet <- data.frame(fromJSON(aegiswe))
aegiswe1 <- aegisweSet[[3]][[2]][[4]] 
aegisweBytes <- vector(mode="integer", length=6)
aegisweBytes[1] <- mean(aegiswe1[1:100])
aegisweBytes[2] <- mean(aegiswe1[101:200]) 
aegisweBytes[3] <- mean(aegiswe1[201:300])
aegisweBytes[4] <- mean(aegiswe1[301:400])
aegisweBytes[5] <- mean(aegiswe1[401:500])
aegisweBytes[6] <- mean(aegiswe1[501:600])
aegisweBytesHumanReadable <- humanReadable(aegisweBytes)
aegisweBytes<-aegisweBytes/1000000

moruswe_file <- "morus640-we.json"
moruswe_data <- fromJSON(moruswe_file)
moruswe <- as.character(toJSON(moruswe_data))
morusweSet <- data.frame(fromJSON(moruswe))
moruswe1 <- morusweSet[[3]][[2]][[4]] 
morusweBytes <- vector(mode="integer", length=6)
morusweBytes[1] <- mean(moruswe1[1:100])
morusweBytes[2] <- mean(moruswe1[101:200]) 
morusweBytes[3] <- mean(moruswe1[201:300])
morusweBytes[4] <- mean(moruswe1[301:400])
morusweBytes[5] <- mean(moruswe1[401:500])
morusweBytes[6] <- mean(moruswe1[501:600])
morusweBytesHumanReadable <- humanReadable(morusweBytes)
morusweBytes<-morusweBytes/1000000

plot(x, aesweBytes, xlab="Paketlänge in Bytes",type="l", col="blue", ylab="Bandbreite in Mbytes/s",xaxt="n",yaxt="n",ylim=c(0,1220),xlim=c(128,1540), yaxs = "i",xaxs = "i")+ axis(side=1,at=seq(0,1540,256),tcl=-0.4,lwd.ticks=1,mgp=c(0,0.5,0))+axis(side=2,at=seq(0,1200,200),tcl=-0.4,lwd.ticks=1,mgp=c(0,0.5,0))+ lines(x,chachaweBytes,col="red") +lines(x,nomacsecBytes,col="green") +lines(x,aegisweBytes,col="orange") +lines(x,morusweBytes,col="black") +legend("bottomright", inset=0.05, legend =c("AES-GCM","Chacha20-Poly1305","MORUS640","AEGIS128L","no-macsec"),col=c("blue", "red","black","orange","green"), lty=1, cex=0.8,box.lty=0)

////////////////////////////////////
end.cpu_utilization_percent.host_system

test<-aesweSet[[3]][[4]][3]

aesCpu <- aesSet[[3]][[4]][[3]] 
aesBytesCpu <- vector(mode="integer", length=6)
aesBytesCpu[1] <- mean(aesCpu[1:250])
aesBytesCpu[2] <- mean(aesCpu[251:500])
aesBytesCpu[3] <- mean(aesCpu[501:750])
aesBytesCpu[4] <- mean(aesCpu[751:1000])
aesBytesCpu[5] <- mean(aesCpu[1001:1250])
aesBytesCpu[6] <- mean(aesCpu[1251:1500])
aesBytesCpuHumanReadable <- humanReadable(aesBytesCpu)

chachaCpu <- chachaSet[[3]][[4]][[3]] 
chachaBytesCpu <- vector(mode="integer", length=6)
chachaBytesCpu[1] <- mean(chachaCpu[1:250])
chachaBytesCpu[2] <- mean(chachaCpu[251:500])
chachaBytesCpu[3] <- mean(chachaCpu[501:750])
chachaBytesCpu[4] <- mean(chachaCpu[751:1000])
chachaBytesCpu[5] <- mean(chachaCpu[1001:1250])
chachaBytesCpu[6] <- mean(chachaCpu[1251:1500])
chachaBytesCpuHumanReadable <- humanReadable(chachaBytesCpu)

aegisCpu <- aegisSet[[3]][[4]][[3]] 
aegisBytesCpu <- vector(mode="integer", length=6)
aegisBytesCpu[1] <- mean(aegisCpu[1:100])
aegisBytesCpu[2] <- mean(aegisCpu[101:200]) 
aegisBytesCpu[3] <- mean(aegisCpu[201:300])
aegisBytesCpu[4] <- mean(aegisCpu[301:400])
aegisBytesCpu[5] <- mean(aegisCpu[401:500])
aegisBytesCpu[6] <- mean(aegisCpu[501:600])
aegisBytesCpuHumanReadable <- humanReadable(aegisBytesCpu)
aegisBytesCpuHumanReadable <- humanReadable(aegisBytesCpu)

morusCpu <- morusSet[[3]][[4]][[3]]  
morusBytesCpu <- vector(mode="integer", length=6)
morusBytesCpu[1] <- mean(morusCpu[1:100])
morusBytesCpu[2] <- mean(morusCpu[101:200]) 
morusBytesCpu[3] <- mean(morusCpu[201:300])
morusBytesCpu[4] <- mean(morusCpu[301:400])
morusBytesCpu[5] <- mean(morusCpu[401:500])
morusBytesCpu[6] <- mean(morusCpu[501:600])
morusBytesCpuHumanReadable <- humanReadable(morusBytesCpu)

nomacsecCpu <- nomacsecSet[[3]][[4]][[3]] 
nomacsecBytesCpu <- vector(mode="integer", length=6)
nomacsecBytesCpu[1] <- mean(nomacsecCpu[1:100])
nomacsecBytesCpu[2] <- mean(nomacsecCpu[101:200]) 
nomacsecBytesCpu[3] <- mean(nomacsecCpu[201:300])
nomacsecBytesCpu[4] <- mean(nomacsecCpu[301:400])
nomacsecBytesCpu[5] <- mean(nomacsecCpu[401:500])
nomacsecBytesCpu[6] <- mean(nomacsecCpu[501:600])
nomacsecBytesCpuHumanReadable <- humanReadable(nomacsecBytesCpu)

plot(x, aesBytesCpu, xlab="Paketlänge in Bytes",type="l", col="blue", ylab="CPU Auslastung in Mbytes/s",xaxt="n",yaxt="n",ylim=c(0,2.5),xlim=c(128,1540), yaxs = "i",xaxs = "i")+ axis(side=1,at=seq(0,1540,256),tcl=-0.4,lwd.ticks=1,mgp=c(0,0.5,0))+axis(side=2,at=seq(0,2.5,0.5),tcl=-0.4,lwd.ticks=1,mgp=c(0,0.5,0))+ lines(x,chachaBytesCpu,col="red") +lines(x,nomacsecBytesCpu,col="green") +lines(x,aegisBytesCpu,col="orange") +lines(x,morusBytesCpu,col="black") +legend("bottomright", inset=0.05, legend =c("AES-GCM","Chacha20-Poly1305","MORUS640","AEGIS128L","no-macsec"),col=c("blue", "red","black","orange","green"), lty=1, cex=0.8,box.lty=0)

aesCpuwe <- aesweSet[[3]][[4]][[3]] 
aesBytesCpuwe <- vector(mode="integer", length=6)
aesBytesCpuwe[1] <- mean(aesCpuwe[1:250])
aesBytesCpuwe[2] <- mean(aesCpuwe[251:500])
aesBytesCpuwe[3] <- mean(aesCpuwe[501:750])
aesBytesCpuwe[4] <- mean(aesCpuwe[751:1000])
aesBytesCpuwe[5] <- mean(aesCpuwe[1001:1250])
aesBytesCpuwe[6] <- mean(aesCpuwe[1251:1500])
aesBytesCpuweHumanReadable <- humanReadable(aesBytesCpuwe)

chachaCpuwe <- chachaweSet[[3]][[4]][[3]] 
chachaBytesCpuwe <- vector(mode="integer", length=6)
chachaBytesCpuwe[1] <- mean(chachaCpuwe[1:250])
chachaBytesCpuwe[2] <- mean(chachaCpuwe[251:500])
chachaBytesCpuwe[3] <- mean(chachaCpuwe[501:750])
chachaBytesCpuwe[4] <- mean(chachaCpuwe[751:1000])
chachaBytesCpuwe[5] <- mean(chachaCpuwe[1001:1250])
chachaBytesCpuwe[6] <- mean(chachaCpuwe[1251:1500])
chachaBytesCpuweHumanReadable <- humanReadable(chachaBytesCpuwe)

aegisCpuwe <- aegisweSet[[3]][[4]][[3]] 
aegisBytesCpuwe <- vector(mode="integer", length=6)
aegisBytesCpuwe[1] <- mean(aegisCpuwe[1:100])
aegisBytesCpuwe[2] <- mean(aegisCpuwe[101:200]) 
aegisBytesCpuwe[3] <- mean(aegisCpuwe[201:300])
aegisBytesCpuwe[4] <- mean(aegisCpuwe[301:400])
aegisBytesCpuwe[5] <- mean(aegisCpuwe[401:500])
aegisBytesCpuwe[6] <- mean(aegisCpuwe[501:600])
aegisBytesCpuweHumanReadable <- humanReadable(aegisBytesCpuwe)

morusCpuwe <- morusweSet[[3]][[4]][[3]]  
morusBytesCpuwe <- vector(mode="integer", length=6)
morusBytesCpuwe[1] <- mean(morusCpuwe[1:100])
morusBytesCpuwe[2] <- mean(morusCpuwe[101:200]) 
morusBytesCpuwe[3] <- mean(morusCpuwe[201:300])
morusBytesCpuwe[4] <- mean(morusCpuwe[301:400])
morusBytesCpuwe[5] <- mean(morusCpuwe[401:500])
morusBytesCpuwe[6] <- mean(morusCpuwe[501:600])
morusBytesCpuweHumanReadable <- humanReadable(morusBytesCpuwe)


plot(x, aesBytesCpuwe, xlab="Paketlänge in Bytes",type="l", col="blue", ylab="CPU Auslastung in Mbytes/s",xaxt="n",yaxt="n",ylim=c(0,2.5),xlim=c(128,1540), yaxs = "i",xaxs = "i")+ axis(side=1,at=seq(0,1540,256),tcl=-0.4,lwd.ticks=1,mgp=c(0,0.5,0))+axis(side=2,at=seq(0,2.5,0.5),tcl=-0.4,lwd.ticks=1,mgp=c(0,0.5,0))+ lines(x,chachaBytesCpuwe,col="red") +lines(x,nomacsecBytesCpu,col="green") +lines(x,aegisBytesCpuwe,col="orange") +lines(x,morusBytesCpuwe,col="black") +legend("bottomright", inset=0.05, legend =c("AES-GCM","Chacha20-Poly1305","MORUS640","AEGIS128L","no-macsec"),col=c("blue", "red","black","orange","green"), lty=1, cex=0.8,box.lty=0)


cpu bottleneck morus könnte noch besser sein
